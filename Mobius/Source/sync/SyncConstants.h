/**
 * A set of enumerations that define characteristics of synchronization.
 */

#pragma once

/**
 * The sync source defines a fundamental type of synchronization, or where
 * synchronization pulses and sync unit lengths come from.  A source
 * may either be Internal or External.
 */
typedef enum {

    /**
     * There is no synchronization, the track is "freewheeling"
     */
    SyncSourceNone,

    /**
     * The internal transport.
     */
    SyncSourceTransport,

    /**
     * Any internal track.
     */
    SyncSourceTrack,

    /**
     * The plugin host application.
     */
    SyncSourceHost,

    /**
     * External MIDI clocks.
     */
    SyncSourceMidi

} SyncSource;

/**
 * Events that may be generated by the source.
 */
class SyncEvent {
  public:

    bool resync = false;
    bool beat = false;
    bool bar = false;
    int blockOffset = 0;

    void reset() {
        resync = false;
        beat = false;
        bar = false;
        blockOffset = 0;
    }
};

/**
 * The sync unit defines a time division the sync source on which
 * something may be synchronized.
 *
 * None means no time is defined, which in some contexts may indiciate falling
 * back to a default or global location.  In others it is nonsensical
 * and will default to Beat.
 */
typedef enum {

    SyncUnitNone,
    SyncLocationBeat,
    SyncLocationBar,
    SyncLocationLoop

} SyncUnit;
    
