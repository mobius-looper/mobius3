/**
 * Helper class for Transport to monitor drift between the audio
 * stream and the MIDI clocks being generated by MidiRealizer.
 *
 * This should actually be usable by any syncn source.  Unclear whether this
 * needs to be embedded in each Follower.
 */

#pragma once

class DriftMonitor
{
  public:

    DriftMonitor();
    ~DriftMonitor();

    void setSampleRate(int rate);
    void setLoopFrames(int frames);
    void setPulseFrames(int frames);
    
    void resync();
    float advance(int blockFrames, int pulseOffset);
    
    int getDrift();

  private:

    bool advance(int audioFrames);
    void pulse();
    float checkDrift();
    
    int sampleRate = 0;
    int loopFrames = 0;
    int pulseFrames = 0;
    int audioFrame = 0;
    int pulseFrame = 0;
    int loops = 0;
    int drift = 0;
    bool syncing = false;
    bool correcting = false;
    
    int pulseCount = 0;
    int lastAdjustPulse = 0;
    int lastAdjustDrift = 0;
    float lastAdjust = 0.0f;
};

    
    
