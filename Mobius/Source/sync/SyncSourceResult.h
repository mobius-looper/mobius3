/**
 * State calculated on each block of audio by analyzing the sync source.
 * The source fields are useful for the analyzer in doing drift detection.
 * The audio fields are what are generated by the analyzer for consumption
 * by the level above, the Pulsator.
 */

#pragma once

class SyncSourceResult
{
  public:
    
    //
    // Analysis of the information the host gives us
    //

    bool started = false;
    bool stopped = false;

    // true if a tempo change was detected
    bool tempoChanged = false;

    // the new unit length if the tempo changed
    int newUnitLength = 0;

    //
    // Normalized beat events
    //

    // true if there was a beat detected in this block
    bool beatDetected = false;

    // the offset within the block to the beat
    int blockOffset = 0;

    // true if this beat represented a bar
    bool bar = false;

    // true if this beat represented a loop
    bool loop = false;

    void reset() {
        
        started = false;
        stopped = false;
        tempoChanged = false;
        newUnitLength = 0;

        beatDetected = false;
        blockOffset = 0;
        bar = false;
        loop = false;
    }

};
    

    
    

    
    
    
