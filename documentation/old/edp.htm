<html>
<head>
<title>Mobius and the Echoplex Digital Pro</title><style type='text/css'>
<!-- 
div.constraint,div.issue,div.note,div.notice     { margin-left: 2em; }dt.label       { display: run-in; }li           { margin-top: 0.3em; margin-bottom: 0.3em; }p           { margin-top: 0.6em; margin-bottom: 0.6em; }.diff-chg	{ background-color: orange; }.diff-del	{ background-color: red; text-decoration: line-through;}.diff-add	{ background-color: lime; }table          { empty-cells: show; }div.exampleInner { margin-left: 1em;                       margin-top: 0em; margin-bottom: 0em}div.exampleOuter {border: 4px double gray;                  margin: 0em; padding: 0em}div.exampleInner { background-color: #d5dee3;                   border-top-width: 4px;                   border-top-style: double;                   border-top-color: #d3d3d3;                   border-bottom-width: 4px;                   border-bottom-style: double;                   border-bottom-color: #d3d3d3;                   padding: 4px; margin: 0em }div.exampleWrapper { margin: 4px }div.exampleHeader { font-weight: bold; margin: 4px}body {  padding: 2em 1em 2em 70px;  margin: 0;  font-family: sans-serif;  color: black;  background: white;  background-position: top left;  background-attachment: fixed;  background-repeat: no-repeat;}:link { color: #00C; background: transparent }:visited { color: #609; background: transparent }a:active { color: #C00; background: transparent }a:link img, a:visited img { border-style: none } /* no border on img links */a img { color: white; }        /* trick to hide the border in Netscape 4 */@media all {                   /* hide the next rule from Netscape 4 */  a img { color: inherit; }    /* undo the color change above */}th, td { /* ns 4 */  font-family: sans-serif;}h1, h2, h3, h4, h5, h6 { text-align: left }/* background should be transparent, but WebTV has a bug */h1, h2, h3 { color: #005A9C; background: white }h1 { font: 170% sans-serif }h2 { font: 140% sans-serif }h3 { font: 120% sans-serif }h4 { font: bold 100% sans-serif }h5 { font: italic 100% sans-serif }h6 { font: small-caps 100% sans-serif }.hide { display: none }div.head { margin-bottom: 1em }div.head h1 { margin-top: 2em; clear: both }div.head table { margin-left: 2em; margin-top: 2em }p.copyright { font-size: small }p.copyright small { font-size: small }@media screen {  /* hide from IE3 */a[href]:hover { background: #ffa }}dd { margin-top: 0.3em; margin-bottom: 0.6em }dt { margin-top: 0; margin-bottom: 0 } /* opera 3.50 */dt { font-weight: bold }pre, code { font-family:monospace; font-size: medium }ul.toc {  list-style: disc;		/* Mac NS has problem with 'none' */  list-style: none;}-->
</style>
</head>
<body>
<h1 class=title1>Mobius and the Echoplex Digital Pro</h1>
<h2 class=title2>March 2012</h2>
<br>
<h1 class=sec1>Contents</h1>
<table>
<tr align=left><th>1</th><td></td><td><a href='#Introduction'>Introduction</a></td>
<tr align=left><th>2</th><td></td><td><a href='#Parameters'>Parameters</a></td>
<tr align=left><th>2.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#8ths/Cycle'>8ths/Cycle</a></td>
<tr align=left><th>2.2</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#AutoRecord'>AutoRecord</a></td>
<tr align=left><th>2.3</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Channel'>Channel</a></td>
<tr align=left><th>2.4</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#ControlSource'>ControlSource</a></td>
<tr align=left><th>2.5</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#FeedBkCont'>FeedBkCont</a></td>
<tr align=left><th>2.6</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Insert Mode'>Insert Mode</a></td>
<tr align=left><th>2.7</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Loop/Delay (InterfaceMode)'>Loop/Delay (InterfaceMode)</a></td>
<tr align=left><th>2.8</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Loop Copy'>Loop Copy</a></td>
<tr align=left><th>2.9</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#LoopTrig'>LoopTrig</a></td>
<tr align=left><th>2.10</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MoreLoops'>MoreLoops</a></td>
<tr align=left><th>2.11</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MuteMode'>MuteMode</a></td>
<tr align=left><th>2.12</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#OverdubMode'>OverdubMode</a></td>
<tr align=left><th>2.13</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Overflow'>Overflow</a></td>
<tr align=left><th>2.14</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Quantize'>Quantize</a></td>
<tr align=left><th>2.15</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Presets'>Presets</a></td>
<tr align=left><th>2.16</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#RecordMode'>RecordMode</a></td>
<tr align=left><th>2.17</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#RoundMode'>RoundMode</a></td>
<tr align=left><th>2.18</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SamplerStyle'>SamplerStyle</a></td>
<tr align=left><th>2.19</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Source#'>Source#</a></td>
<tr align=left><th>2.20</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Switch Quant'>Switch Quant</a></td>
<tr align=left><th>2.21</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Sync'>Sync</a></td>
<tr align=left><th>2.22</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Threshold'>Threshold</a></td>
<tr align=left><th>2.23</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Velocity'>Velocity</a></td>
<tr align=left><th>3</th><td></td><td><a href='#Functions'>Functions</a></td>
<tr align=left><th>3.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Dump'>Dump</a></td>
<tr align=left><th>3.2</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Feedback'>Feedback</a></td>
<tr align=left><th>3.3</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#GeneralReset'>GeneralReset</a></td>
<tr align=left><th>3.4</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#HalfSpeed'>HalfSpeed</a></td>
<tr align=left><th>3.5</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Insert'>Insert</a></td>
<tr align=left><th>3.6</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Load'>Load</a></td>
<tr align=left><th>3.7</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#LoopDivide'>LoopDivide</a></td>
<tr align=left><th>3.8</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#LoopTriggering'>LoopTriggering</a></td>
<tr align=left><th>3.9</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#LoopWindowing'>LoopWindowing</a></td>
<tr align=left><th>3.10</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MultiIncrease'>MultiIncrease</a></td>
<tr align=left><th>3.11</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Multiply'>Multiply</a></td>
<tr align=left><th>3.12</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Mute'>Mute</a></td>
<tr align=left><th>3.13</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#NextLoop'>NextLoop</a></td>
<tr align=left><th>3.14</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Overdub'>Overdub</a></td>
<tr align=left><th>3.15</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#PreviousLoop'>PreviousLoop</a></td>
<tr align=left><th>3.16</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Record'>Record</a></td>
<tr align=left><th>3.17</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Rehearse'>Rehearse</a></td>
<tr align=left><th>3.18</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Replace'>Replace</a></td>
<tr align=left><th>3.19</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Reset'>Reset</a></td>
<tr align=left><th>3.20</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Retrigger'>Retrigger</a></td>
<tr align=left><th>3.21</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Reverse'>Reverse</a></td>
<tr align=left><th>3.22</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SamplePlay'>SamplePlay</a></td>
<tr align=left><th>3.23</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#StartPoint'>StartPoint</a></td>
<tr align=left><th>3.24</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Stutter'>Stutter</a></td>
<tr align=left><th>3.25</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Substitute'>Substitute</a></td>
<tr align=left><th>3.26</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SUS Commands'>SUS Commands</a></td>
<tr align=left><th>3.27</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SUSNextLoop'>SUSNextLoop</a></td>
<tr align=left><th>3.28</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Undo'>Undo</a></td>
<tr align=left><th>4</th><td></td><td><a href='#Synchronization'>Synchronization</a></td>
<tr align=left><th>4.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Auto Start Point'>Auto Start Point</a></td>
<tr align=left><th>4.2</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Beat Sync'>Beat Sync</a></td>
<tr align=left><th>4.3</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Brother Sync'>Brother Sync</a></td>
<tr align=left><th>4.4</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Global/Local MIDI Clock'>Global/Local MIDI Clock</a></td>
<tr align=left><th>4.5</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MIDI Sync Indicators'>MIDI Sync Indicators</a></td>
<tr align=left><th>4.6</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MuteQuantMIDIStartSong'>MuteQuantMIDIStartSong</a></td>
<tr align=left><th>4.7</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#QuantMIDIStartSong'>QuantMIDIStartSong</a></td>
<tr align=left><th>4.8</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#QuantStartPoint'>QuantStartPoint</a></td>
<tr align=left><th>4.9</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#ReAlign'>ReAlign</a></td>
<tr align=left><th>4.10</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SongPositionPointer and Continue'>SongPositionPointer and Continue</a></td>
<tr align=left><th>4.11</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#StartSong, StopSong, Continue'>StartSong, StopSong, Continue</a></td>
<tr align=left><th>4.12</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Stop Sync'>Stop Sync</a></td>
<tr align=left><th>4.13</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SyncStartPoint'>SyncStartPoint</a></td>
<tr align=left><th>4.14</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SyncRecord'>SyncRecord</a></td>
<tr align=left><th>4.15</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Tempo Select'>Tempo Select</a></td>
<tr align=left><th>5</th><td></td><td><a href='#MIDI Control'>MIDI Control</a></td>
<tr align=left><th>5.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MIDI Data Wheel'>MIDI Data Wheel</a></td>
<tr align=left><th>5.2</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MIDI Pipe'>MIDI Pipe</a></td>
<tr align=left><th>5.3</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#MIDI Virtual Buttons'>MIDI Virtual Buttons</a></td>
<tr align=left><th>5.4</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#SysEx'>SysEx</a></td>
<tr align=left><th>5.5</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Transmitting MIDI Commands'>Transmitting MIDI Commands</a></td>
<tr align=left><th>6</th><td></td><td><a href='#Parameter Presets'>Parameter Presets</a></td>
<tr align=left><th>7</th><td></td><td><a href='#User Interface'>User Interface</a></td>
<tr align=left><th>7.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Smart Buttons aka Double Clicks'>Smart Buttons aka Double Clicks</a></td>
<tr align=left><th>7.2</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Visual Tempo Guide'>Visual Tempo Guide</a></td>
<tr align=left><th>8</th><td></td><td><a href='#General Concepts'>General Concepts</a></td>
<tr align=left><th>8.1</th><td></td><td>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#Event Gravity'>Event Gravity</a></td>
</table>
<a name='Introduction'>
<h1 class=sec1>1 Introduction</h1>
</a>
<p>Mobius obviously derived much of its design inspiration from
the <i>Gibson Echoplex Digital Pro</i> with <i>Loop IV</i> software,
commonly known as the "EDP".  If you are familiar with the EDP, this
document will describe the EDP features that Mobius does and does not
implement.  The sections are arranged in the same order they appear in
the EDP manual, so if you are reading something in the EDP manual
you should be able to easily find the corresponding section here.</p>
<p>Note that we will not cover new features in Mobius that are
not in the EDP, nor is this an exhaustive reference manual.  It is
intended only to help people already familiar with the EDP
to transition to Mobius.</p>
<p>In many cases a parameter will be described as "Not applicable".
Typically these are related to the constraints of the EDP as a
hardware device that are not relevant to a software application.</p>
<a name='Parameters'>
<h1 class=sec1>2 Parameters</h1>
</a>
<a name='8ths/Cycle'>
<h2 class=sec2>2.1 8ths/Cycle</h2>
</a>
<p>Mobius calls this <b>Subcycles</b>.</p>
<p>The algorithm for using the subcycle count to determine the
MIDI output tempo is similar, but Mobius also uses the <i>Out Sync Max Tempo</i>
and <i>Out Sync Min Tempo</i> parameters to constrain the tempo range.</p>
<a name='AutoRecord'>
<h2 class=sec2>2.2 AutoRecord</h2>
</a>
<p>This parameter is not implemented but you can achieve
the same result by setting the <i>Empty Loop Action</i> parameter
to <i>Record</i>.</p>
<a name='Channel'>
<h2 class=sec2>2.3 Channel</h2>
</a>
<p>Not applicable.</p>
<a name='ControlSource'>
<h2 class=sec2>2.4 ControlSource</h2>
</a>
<p>Not applicable.</p>
<a name='FeedBkCont'>
<h2 class=sec2>2.5 FeedBkCont</h2>
</a>
<p>Not applicable.</p>
<a name='Insert Mode'>
<h2 class=sec2>2.6 Insert Mode</h2>
</a>
<p>On the EDP, this parameter lets you redefine what the <i>Insert</i> 
button does on the EDP footswitch.  It is not implemented in Mobius because
most people use MIDI footswitches with many buttons and you can bind
any MIDI message to any function.</p>
<a name='Loop/Delay (InterfaceMode)'>
<h2 class=sec2>2.7 Loop/Delay (InterfaceMode)</h2>
</a>
<p>This parameter is not implemented, but you can get similar behavior
with scripts and bindings.  The most important thing that
<i>InterfaceMode</i> provides is a second feedback control that is
used during Overdub, Multiply, and Substitute.  This second feedback control
is enabled in the EDP by setting <i>Loop/Delay</i> to <i>EXP</i>, also known as 
<i>ExpertMode</i>.</p>
<p>Mobius has two feedback controls, one named <i>Feedback</i> and the
other named <i>Secondary Feedback</i>.  You can enable secondary feedback
for all modal editing functions with the <i>Enable Secondary Feedback</i>
preset parameter.</p>
<p>Instead of setting <i>Loop/Delay</i> to <i>Stu</i> for <i>StutterMode</i>,
Mobius has the <i>Stutter</i> function.</p>
<a name='Loop Copy'>
<h2 class=sec2>2.8 Loop Copy</h2>
</a>
<p>Mobius has a similar parameter named <i>Empty Loop Action</i>
which may have these values:</p>
<ul>
<li>None</li>
<li>Record</li>
<li>Copy</li>
<li>Copy Timing</li>
</ul>
<a name='LoopTrig'>
<h2 class=sec2>2.9 LoopTrig</h2>
</a>
<p>Not applicable.</p>
<a name='MoreLoops'>
<h2 class=sec2>2.10 MoreLoops</h2>
</a>
<p>Mobius calls this <b>Loop Count</b>.</p>
<a name='MuteMode'>
<h2 class=sec2>2.11 MuteMode</h2>
</a>
<p>Mobius calls this <b>Mute Mode</b>.  It is the same except that
Mobius adds the <i>Pause</i> option to make the <i>Mute</i> function
behave like the <i>Pause</i> function.</p>
<a name='OverdubMode'>
<h2 class=sec2>2.12 OverdubMode</h2>
</a>
<p>This parameter is not implemented.  If you want what the
EDP calls <i>SUSOverdub</i> you can use the Mobius 
function <i>Sustain Overdub</i> or add <i>Overdub</i> to the 
list of functions in the <i>Sustain Functions</i> preset paramter.</p>
<a name='Overflow'>
<h2 class=sec2>2.13 Overflow</h2>
</a>
<p>Not applicable.</p>
<a name='Quantize'>
<h2 class=sec2>2.14 Quantize</h2>
</a>
<p>Mobius calls this <b>Quantize Mode</b>.   Escaping quantization
by executing a function again after it has been quantized works the 
same way.</p>
<a name='Presets'>
<h2 class=sec2>2.15 Presets</h2>
</a>
<p>Not applicable.</p>
<a name='RecordMode'>
<h2 class=sec2>2.16 RecordMode</h2>
</a>
<p>This parameter is not implemented.  If you want what the EDP calls
<i>SUSRecord</i> use the Mobius function <i>Sustain Record</i> or
add <i>Record</i> to the list of functions in the <i>Sustain Functions</i>
preset parameter.</p>
<p>The equivalent of <i>RecordMode=Safe</i> in Mobius is setting the
<i>Record Resets Feedback</i> parameter to <i>true</i>.</p>
<a name='RoundMode'>
<h2 class=sec2>2.17 RoundMode</h2>
</a>
<p>Mobius calls this <b>Overdub While Rounding</b>.</p>
<a name='SamplerStyle'>
<h2 class=sec2>2.18 SamplerStyle</h2>
</a>
<p>This parameter is not implemented but you can achieve similar
results with the parameters <i>Switch Location</i>, <i>Switch Duration</i>,
and <i>Return Location</i>.</p>
<ul>
<li><b>SamplerStyle=Run</b> -&gt; SwitchLocation=Restore + SwitchDuration=Permanent</li>
<li><b>SamplerStyle=Start</b> -&gt; SwitchLocation=Start + SwitchDuration=Permanent</li>
<li><b>SamplerStyle=Once</b> -&gt; SwitchLocation=Start + SwitchDuration=OnceReturn</li>
<li><b>SamplerStyle=Attack</b> not implemented</li>
</ul>
<p>A result similar to <i>SamplerStyle=Attack</i> can be achieved by checking
the <i>Switch Velocity Sensitive</i> preset parameter.</p>
<a name='Source#'>
<h2 class=sec2>2.19 Source#</h2>
</a>
<p>Not applicable.</p>
<a name='Switch Quant'>
<h2 class=sec2>2.20 Switch Quant</h2>
</a>
<p>Mobius calls this <b>Switch Quantize</b>.</p>
<p>On the EDP the <i>Undo</i> function is always a confirmation
action for the three <i>Confirm</i> options.  In Mobius, you use
the <i>Confirm</i> function and <i>Undo</i> behaves normally allowing you
to remove functions that have been "stacked".  If you want <i>Undo</i>
to be a confirmation action add it to the global parameter
<i>Switch Confirmation Functions</i>.</p>
<p>During the switch quantization period, <i>Record</i>, <i>Overdub</i>,
<i>Multiply</i>, and <i>Insert</i> can be used to rerecord loops
or do a sound or time copy.  Most other functions can also be stacked,
they are simply executed after the switch.</p>
<a name='Sync'>
<h2 class=sec2>2.21 Sync</h2>
</a>
<p>Mobius calls this <b>Sync Source</b>.  What the EDP calls <i>Out User Start</i>
Mobius implements with a pair of parameters.  First you set <i>Sync Source</i>
to <i>Out</i>, then you check the <i>Out Sync Manual Start</i> parameter.</p>
<p>Mobius does not implement 
the <i>In</i> sync mode, instead it provides <i>MIDI Beat</i> and 
<i>MIDI Bar</i> which are similar and don't have to be based on the
<i>Subcycles</i> (8ths/Cycle) parameter.</p>
<a name='Threshold'>
<h2 class=sec2>2.22 Threshold</h2>
</a>
<p>Mobius calls this <b>Record Threshold</b>.</p>
<a name='Velocity'>
<h2 class=sec2>2.23 Velocity</h2>
</a>
<p>Mobius calls this <b>Switch Velocity Sensitive</b>.</p>
<a name='Functions'>
<h1 class=sec1>3 Functions</h1>
</a>
<a name='Dump'>
<h2 class=sec2>3.1 Dump</h2>
</a>
<p>Dumping loops over MIDI is not implemented but you can save loops
to files using the <i>Save Loop</i> function, or one of several items
from the <i>File</i> menu.</p>
<a name='Feedback'>
<h2 class=sec2>3.2 Feedback</h2>
</a>
<p>Mobius calls <i>Feedback</i> a <i>track control</i> rather than
a function but it behaves the same.  You can undo loop passes that apply
feedback, and you can set the global parameter <i>No Feedback Undo</i> if
you would rather not make layers if the only change was applying feedback.</p>
<a name='GeneralReset'>
<h2 class=sec2>3.3 GeneralReset</h2>
</a>
<p>Mobius calls this <b>Track Reset</b>.   A long press of <i>Multiply</i>
will also perform a <i>Track Reset</i> if the current loop is in
<i>Reset</i> mode.</p>
<a name='HalfSpeed'>
<h2 class=sec2>3.4 HalfSpeed</h2>
</a>
<p>In Mobius, the function that toggles half-speed is named <b>Speed Toggle</b>.
You must bind a trigger directly to this function, you do not use
it by setting <i>Insert Mode</i>.  Like the EDP you can "arm" half-speed
mode while a loop is in Reset mode.</p>
<p><i>Speed Toggle</i> may be given a binding argument that specifies
a number of semitones up or down, so it can be used to toggle between 
any speed interval.</p>
<p>In addition there are two other functions that change speed without
toggling.  <i>Halfspeed</i> forces the loop into half-speed if it is
not already there.  <i>Speed Cancel</i> cancels half-speed if it is active.</p>
<a name='Insert'>
<h2 class=sec2>3.5 Insert</h2>
</a>
<p>In Mobius, the <i>Insert</i> function always does an insert, it is not
redefinable using the <i>Insert Mode</i> parameter.  Insertion should
behave the same as it does on the EDP.  All of the alternate endings
work the same including <i>Record</i> to perform an "unrounded insert".  
In addition most Mobius functions that aren't found on the EDP will
end the insert and be executed immediately after the rounding period.</p>
<p>On the EDP, a long-press of <i>Insert</i> will convert the Insert
into a <i>Replace</i>.  Mobius does not support this.</p>
<a name='Load'>
<h2 class=sec2>3.6 Load</h2>
</a>
<p>Loading loops over MIDI is not implemented, but you can load loops
from files using several items in the <i>File</i> menu.</p>
<a name='LoopDivide'>
<h2 class=sec2>3.7 LoopDivide</h2>
</a>
<p>What the EDP calls <i>LoopDivide</i> isn't a function, it's
really a way of thinking about how the <i>Quantize</i> parameter can be used.
Mobius supports quantization of all functions where quantization 
makes sense.</p>
<a name='LoopTriggering'>
<h2 class=sec2>3.8 LoopTriggering</h2>
</a>
<p>What the EDP calls <i>LoopTriggering</i> is implemented in Mobius
by a set of numbered functions: <i>Loop 1</i>, <i>Loop 2</i>, <i>Loop 3</i>, 
on up to <i>Loop 8</i>.  Mobius does not implement the <i>LoopTrig</i>
parameter, you simply bind any MIDI button to any loop.</p>
<p>In the EDP, a long-press of one of the loop trigger functions
will reset the loop.  Mobius does not support this.</p>
<a name='LoopWindowing'>
<h2 class=sec2>3.9 LoopWindowing</h2>
</a>
<p><i>LoopWindowing</i> is implemented but it is not activated with the 
<i>Undo</i> parameter.  Undo always either cancels events or returns
to the previous layer.</p>
<p>Instead the loop window is controlled with a combination of these
functions.</p>
<ul>
<li>Window Backward</li>
<li>Window Forward</li>
<li>Window Start Backward</li>
<li>Window Start Forward</li>
<li>Window End Backward</li>
<li>Window End Forward</li>
</ul>
<p>unlike the EDP, you can move the window both backward and
forward in the loop history, and you can adjust the leading
and trailing edges independently.  Preset parameters allow
you define the amount of window "slide" and edge adjustment, so
you can move the window in loop, cycle, subcycle, millisecond, 
or frame units.</p>
<a name='MultiIncrease'>
<h2 class=sec2>3.10 MultiIncrease</h2>
</a>
<p>We don't consider this a function, it is more like an adjustment to
the way <i>Multiply</i> mode is ended.  Mobius supports this though it
isn't called a function and you can't bind a trigger to it.  It is
simply what happens if you keep executing <i>Multiply</i> during the
rounding period.</p>
<a name='Multiply'>
<h2 class=sec2>3.11 Multiply</h2>
</a>
<p>Mobius implements <i>Multiply</i> but in a slightly different way.
There are two implementations of multiply selected with the
<i>Multiply Mode</i> parameter.  For the behavior closest to the EDP
select <i>Normal</i>.  Mobius supports all of the alternate endings
including <i>Record</i> for an "unrounded multiply".</p>
<p>Long-pressing <i>Multiply</i> to convert it to a <i>SUSMultiply</i>
is not implemented.</p>
<p>We have not attempted to exactly duplicate the EDP's Multiply, and
instead implemented what made the most sense to us.  The main
difference between the EDP and Mobius appears to be where the start
point of the loop is left after the Multiply.  The EDP leaves it where
the Multiply began, while Mobius "rounds backward" so that the start
point is the beginning of the cycle in which the Multiply began.  We
prefer our implementation.</p>
<p>The distinction is subtle and most people won't notice, especially
if you are quantizing.  This has been a source of frustration for a
few users over the years who believe that the differences are more
important than this but we have not been able to precisely define what
the differences are.  If you can describe exactly what you think the
differences are, please contact us.</p>
<a name='Mute'>
<h2 class=sec2>3.12 Mute</h2>
</a>
<p><i>Mute</i> in Mobius works mostly the same as the EDP.  Mobius
has an extra <i>Mute Mode</i> parameter value named <i>Pause</i>
that makes the <i>Mute</i> function behave the same as the <i>Pause</i>
function.</p>
<p>The <i>Insert</i> (SamplePlay) and <i>Multiply</i> (Realign) alternate
endings for <i>Mute</i> mode are supported.</p>
<p>In the EDP, the <i>Undo</i> alternate ending to <i>Mute</i> will
unmute and use the opposite value of the <i>Mute Mode</i> parameter
when determining where the unmuted loop should begin playing.  Mobius
does not implement this.</p>
<p>In the EDP, a long-press of <i>Mute</i> converts it to a <i>SUSMute</i>.
Mobius does not implement this.</p>
<a name='NextLoop'>
<h2 class=sec2>3.13 NextLoop</h2>
</a>
<p>Mobius calls this <b>Next Loop</b>.  It works mostly the same.  
<i>Switch Quantize</i> can be used to quantize the ending or enter
a "confirm" mode.  The EDP <i>AutoRecord</i>, <i>LoopCopy</i> parameters
are implemented in Mobius as the <i>Empty Loop Action</i> parameter.</p>
<a name='Overdub'>
<h2 class=sec2>3.14 Overdub</h2>
</a>
<p><i>Overdub</i> in Mobius is the mostly same as the EDP except that
Mobius does not support the <i>OverdubMode</i> parameter.  <i>Overdub</i>
and <i>Sustain Overdub</i> are both functions but they must be bound
to different triggers.  In Mobius, <i>Overdub</i> may be quantized by
setting the <i>Overdub Quantized</i> preset parameter.</p>
<p>In the EDP, a long-press of <i>Overdub</i> converts it to a
<i>SUSOverdub</i>. Mobius does not support this.</p>
<a name='PreviousLoop'>
<h2 class=sec2>3.15 PreviousLoop</h2>
</a>
<p>Mobius calls this <b>Previous Loop</b>.  It works mostly the same,
see <a href='#NextLoop'>NextLoop</a> for a discussion of the differences.</p>
<a name='Record'>
<h2 class=sec2>3.16 Record</h2>
</a>
<p>The <i>Record</i> function in Mobius is mostly the same as the EDP.
Mobius does not implement the <i>Record Mode</i> parameter.  <i>Record</i>
and <i>Sustain Record</i> are available functions but they must be bound
to different triggers.  A long-press of Record will do a <i>Reset</i>
and the <i>Record Threshold</i> parameter can be used to wait for
an appropriate signal level.  All of the alternate endings are
implemented.</p>
<p>There are some differences in the way synchronized recordings work.
See <a href='#Synchronization'>Synchronization</a> for more information.</p>
<a name='Rehearse'>
<h2 class=sec2>3.17 Rehearse</h2>
</a>
<p>This function is partially implemented, but there are a few differences.
We are considering removing support for this function.</p>
<a name='Replace'>
<h2 class=sec2>3.18 Replace</h2>
</a>
<p>Mobius implements this function.</p>
<a name='Reset'>
<h2 class=sec2>3.19 Reset</h2>
</a>
<p>Mobius implements this function.</p>
<a name='Retrigger'>
<h2 class=sec2>3.20 Retrigger</h2>
</a>
<p>Mobius calls this <i>Restart</i>.</p>
<a name='Reverse'>
<h2 class=sec2>3.21 Reverse</h2>
</a>
<p>Mobius implements this function.  In the EDP, you can only use <i>Undo</i>
back to the point where the <i>Reverse</i> happened. Mobius does not have
this restriction, you can undo all the way back to the first layer while
remaining in <i>Reverse</i> mode.</p>
<p>On the EDP, a long-press of <i>Reverse</i> will convert it to 
a <i>SUSReverse</i>, Mobius does not implement this.</p>
<a name='SamplePlay'>
<h2 class=sec2>3.22 SamplePlay</h2>
</a>
<p>Mobius does not implement this function but you can achieve similar
behavior with the numbered loop trigger functions (<i>Loop 1</i>, 
<i>Loop 2</i>, etc.) combined with the <i>Switch Location</i> and 
<i>Switch Duration</i> parameters.  When <i>Switch Duration</i> is set
to <i>Once</i> the loop plays to the end then goes into <i>Mute</i> mode.
If you set <i>Switch Location</i> to <i>Start</i> the behavior is the
same as the EDP's <i>SamplePlay</i>.  If you want this behavior
without permanently setting <i>Switch Location</i> and <i>Switch Duration</i>
in the preset, you can use scripts to set them temporarily.</p>
<a name='StartPoint'>
<h2 class=sec2>3.23 StartPoint</h2>
</a>
<p>Mobius implements this function.  A long-press of the <i>Start Point</i>
function will do what Mobius calls <i>Sync Start Point</i> which
is the same as what the EDP calls <i>QuantMIDIStartPoint</i>.</p>
<a name='Stutter'>
<h2 class=sec2>3.24 Stutter</h2>
</a>
<p>In the EDP this is accessible from the <i>Insert</i> button
when <i>Interface Mode</i> is set to <i>Stu</i>.  In Mobius this
is a normal bindable function.</p>
<p>During stutter mode, repetitions of the current cycle will be inserted
whenever the end of the cycle is reached.  Mobius stutters the cycle
you were in when the function was performed.  The EDP manual suggests
that the stuttered cycle should be the one AFTER the current cycle.  We 
prefer stuttering the current cycle because you can get to the next
one just by quantizing.</p>
<a name='Substitute'>
<h2 class=sec2>3.25 Substitute</h2>
</a>
<p>Mobius implements this function.   To use the <i>Secondary Feedback</i>
control, set the <i>Enable Secondary Feedback</i> preset parameter
to <i>true</i>.</p>
<a name='SUS Commands'>
<h2 class=sec2>3.26 SUS Commands</h2>
</a>
<p>Mobius does not have <i>InsertMode=Sustain</i> but the functions
<i>Sustain Multiply</i> and <i>Sustain Insert</i> are bindable functions
as are most other "modal" editing functions.</p>
<p>All of the following EDP functions that are accessible with MIDI
have normal Mobius functions.  The first bold name is the EDP name, the
second name is the Mobius name.</p>
<ul>
<li><b>SUSRecord</b> - Sustain Record</li>
<li><b>SUSOverdub</b> - Sustain Overdub</li>
<li><b>SUSMultiply</b> - Sustain Multiply</li>
<li><b>SUSUnroundedMultiply</b> - Sustain Unrounded Multiply</li>
<li><b>SUSInsert</b> - Sustain Insert</li>
<li><b>SUSUnroundedInsert</b> - Sustain Unrounded Insert</li>
<li><b>SUSMute</b> - Sustain Mute</li>
<li><b>SUSReplace</b> - Sustain Replace</li>
<li><b>SUSSubstitute</b> - Sustain Substitute</li>
<li><b>SUSReverse</b> - Sustain Reverse</li>
<li><b>SUSSpeed</b> - Sustain Speed Toggle</li>
<li><b>SUSNextLoop</b> - Sustain Next Loop</li>
<li><b>SUSMuteRetrigger</b> - Sustain Mute Restart</li>
</ul>
<p>Mobius also supports sustain variants for these functions.</p>
<ul>
<li>Sustain Previous Loop</li>
<li>Sustain Rehearse</li>
<li>Sustain Stutter</li>
</ul>
<a name='SUSNextLoop'>
<h2 class=sec2>3.27 SUSNextLoop</h2>
</a>
<p>Mobius implements this function, see <a href='#NextLoop'>NextLoop</a> for a 
discussion of the differences in the loop switching functions.</p>
<a name='Undo'>
<h2 class=sec2>3.28 Undo</h2>
</a>
<p>Mobius <i>Undo</i> is similar to <i>Undo</i> on the EDP.  Mobius does
not have the distinction between "Long Undo" and "Short Undo".  In Mobius,
<i>Undo</i> behaves the most like EDP's "Long Undo".</p>
<p>Mobius <i>Undo</i> will first remove any scheduled events (quantized
functions), then it will cancel any modal functions (Multiply, Insert, etc.),
then it will roll back to the previous layer.</p>
<p><i>Undo</i> can be used to escape what the EDP calls "SamplePlay" and
what Mobius calls "SwitchDuration=Once" because it removes the <i>Return</i>
event scheduled at the end of the loop.</p>
<p><i>Undo</i> is not by default a switch confirmation action for
the various <i>Confirm</i> values for the <i>Switch Quantize</i> parameter.
If you want to use <i>Undo</i> for this you must add it to the
<i>Switch Confirmation Actions</i> global parameter.</p>
<p>The long discussion of <i>Undo</i> memory management in the EDP
manual does not apply to Mobius.</p>
<p>On the EDP, <i>Undo</i> will move the <i>Loop Window</i> backward.
Mobius does not implement loop windowing so <i>Undo</i> simply returns
to the previous layer.</p>
<a name='Synchronization'>
<h1 class=sec1>4 Synchronization</h1>
</a>
<a name='Auto Start Point'>
<h2 class=sec2>4.1 Auto Start Point</h2>
</a>
<p>Mobius does not currently support what the EDP calls <i>Auto Start
Point</i>. When any form of synchronization is on, Mobius will
periodically adjust the loop so that it stays in sync with the MIDI
clock.  This "drift correction" is disabled when <i>Overdub</i> or
another recording mode is active.  If correction were allowed during
recording, it could cause gaps in the recording which you would hear
as clicks.</p>
<p>If drift correction is disabled and an overdub is left on for several
iterations of the loop, the loop can go out of alignment with the MIDI clocks.
What <i>Auto Start Point</i> does is automatically set the start point
of the loop rather than correcting it, but only if the feedback level
is low enough that the old content of the loop will be inaudible.</p>
<p>Currently in Mobius, if you leave overdub on, the loop will gradually
go out of sync with the external device.  This may be corrected by leaving
overdub and performing a <i>Realign</i>.</p>
<a name='Beat Sync'>
<h2 class=sec2>4.2 Beat Sync</h2>
</a>
<p>What the EDP refers to as "beat sync" is not implemented since
it relies on hardware specific to the EDP.  Mobius can synchronize
with other devices using MIDI.</p>
<a name='Brother Sync'>
<h2 class=sec2>4.3 Brother Sync</h2>
</a>
<p>What the EDP refers to as "brother sync" is not implemented since
it relies on hardware specific to the EDP.  Mobius has a similar
concept called <i>Track Sync</i> that can be used to synchronize
loops in multiple tracks.</p>
<a name='Global/Local MIDI Clock'>
<h2 class=sec2>4.4 Global/Local MIDI Clock</h2>
</a>
<p>Mobius implements a similar system called the <i>External Loop</i> that
works not only with MIDI but with sync pulses from the plugin host
and other sources of sync pulses.</p>
<a name='MIDI Sync Indicators'>
<h2 class=sec2>4.5 MIDI Sync Indicators</h2>
</a>
<p>The EDP will send MIDI note messages at various synchronization 
points such as the loop start point, global MIDI start point, cycle
start point, and sub-cycle start point.  Mobius does not.</p>
<a name='MuteQuantMIDIStartSong'>
<h2 class=sec2>4.6 MuteQuantMIDIStartSong</h2>
</a>
<p>Mobius calls this <i>Mute MIDI Start</i>.</p>
<a name='QuantMIDIStartSong'>
<h2 class=sec2>4.7 QuantMIDIStartSong</h2>
</a>
<p>Mobius calls this <i>Sync Start Point</i>.</p>
<a name='QuantStartPoint'>
<h2 class=sec2>4.8 QuantStartPoint</h2>
</a>
<p>Mobius calls this <i>MIDI Start</i>. It applies to both
MIDI slave sync and plugin host sync.</p>
<a name='ReAlign'>
<h2 class=sec2>4.9 ReAlign</h2>
</a>
<p>Mobius calls this <b>Realign</b>.  When Mobius does the realign
is controlled by the <i>Realign Time</i> parameter.  Setting this
to <i>External</i> is closest to the EDP, the realign will happen
when the "external loop" reaches its start point, a concept the
EDP calls the "global MIDI start point".</p>
<p>When the <i>Sync Source</i> parameter is <i>Out</i>
what <i>Realign</i> does is controlled by the <i>Out Sync Realign Mode</i> parameter.
Setting this to <i>MIDI Start</i> will cause Mobius to send a MIDI <i>Start</i>
message at the Mobius loop start point.  Setting this to <i>Restart</i>
will cause Mobius to restart its loop when the external loop reaches
its start point.</p>
<p>The EDP also has the <i>MIDIMuteReAlign</i> function which 
Mobius calls <i>Mute Realign</i>.</p>
<a name='SongPositionPointer and Continue'>
<h2 class=sec2>4.10 SongPositionPointer and Continue</h2>
</a>
<p>Mobius does not respond to MIDI <i>Song Position</i> 
and <i>Continue</i> messages.  If you are synchronizing with 
a hardware sequencer or drum machine you need to restart the
pattern from the beginning for Mobius to properly track
where the "global start point" is.</p>
<a name='StartSong, StopSong, Continue'>
<h2 class=sec2>4.11 StartSong, StopSong, Continue</h2>
</a>
<p>Mobius should send MIDI <i>Clock</i>, <i>Start</i> and <i>Stop</i> 
messages in mostly the same way as the EDP.  We haven't done
an exhaustive analysis of the differences, but a few are obvious.</p>
<p>Mobius does not send MIDI <i>Start</i> when the <i>Undo</i>
function is executed when the loop is in <i>Reset</i> mode.  You can
however execute the <i>MIDI Start</i> function.</p>
<a name='Stop Sync'>
<h2 class=sec2>4.12 Stop Sync</h2>
</a>
<p>On the EDP, pressing overdub when the track is reset and Sync=In
toggles reception of incoming sync.  It also toggles adherence to the
tempo specified by TempoSelect.  We assume a side effect of this
is that you lose the ability to "arm" overdub mode during reset.</p>
<p>Mobius does not support this feature.</p>
<a name='SyncStartPoint'>
<h2 class=sec2>4.13 SyncStartPoint</h2>
</a>
<p>Mobius does not send MIDI <i>Start</i> when the <i>Undo</i>
function is executed when the loop is in <i>Reset</i> mode.  You can
however execute the <i>MIDI Start</i> function.</p>
<a name='SyncRecord'>
<h2 class=sec2>4.14 SyncRecord</h2>
</a>
<p>This feature from page 5-52 of the manual is how recording
is done when SyncMode=In and Quantize=Off.  The recording begins
immediately after the button is pressed but it is rounded up
at the end so that the loop will be an even multiple of the MIDI
beat length.  Mobius does not support this.</p>
<a name='Tempo Select'>
<h2 class=sec2>4.15 Tempo Select</h2>
</a>
<p>On the EDP, pressing Undo while in reset mode when Sync=Out
activates <i>Tempo Select</i> mode.  While in Tempo Select mode, the
Feedback knob sets the tempo and the Overdub function cancels
Tempo Select rather than it's usual behavior of arming Overdub mode.</p>
<p>Mobius does not support this feature.</p>
<a name='MIDI Control'>
<h1 class=sec1>5 MIDI Control</h1>
</a>
<p>Most of the things you can do with MIDI in the EDP you can do in
Mobius.  Since Mobius doesn't have a hardware interface, it is almost always
used with a MIDI footswitch or control surface.  Every function and almost
every parameter can be directly controlled with MIDI.  So what the EDP 
calls "DirectMIDI" is just the normal way of controlling Mobius. We won't
draw comparisons with every section in the <i>MIDI Control</i> chapter
but a few need to be mentioned.</p>
<a name='MIDI Data Wheel'>
<h2 class=sec2>5.1 MIDI Data Wheel</h2>
</a>
<p>Mobius does not support a single continuous controller for editing
the currently selected preset parameter.  Instead you bind different
controllers to each parameter.</p>
<a name='MIDI Pipe'>
<h2 class=sec2>5.2 MIDI Pipe</h2>
</a>
<p>Mobius does not implement this, and it is normally not necessary
since the computer running Mobius is rarely a "MIDI Thru" device.</p>
<a name='MIDI Virtual Buttons'>
<h2 class=sec2>5.3 MIDI Virtual Buttons</h2>
</a>
<p>Since Mobius does not have a hardware front panel most of these
are not applicable.  You can however bind MIDI messages to a few
functions that control the <i>Instant Parameters</i> user interface
component.  These let you scroll up and down the parameter list
to select one of the, then scroll through the list of possible values
for the selected parameter.</p>
<a name='SysEx'>
<h2 class=sec2>5.4 SysEx</h2>
</a>
<p>Mobius does not support SysEx data dumps but most things can
be saved to and loaded from files.  The Mobius <i>project</i> is
the closest thing to a SysEx dump.</p>
<a name='Transmitting MIDI Commands'>
<h2 class=sec2>5.5 Transmitting MIDI Commands</h2>
</a>
<p>Mobius does not send out MIDI <i>Note</i> or <i>Controller</i> messages
when functions are triggered from the user interface.  If this were
absolutely necessary you could do something similar with scripts.</p>
<a name='Parameter Presets'>
<h1 class=sec1>6 Parameter Presets</h1>
</a>
<p>The Mobius concept of a <i>preset</i> is almost the same as the
EDP.  Mobius has many more parameters than the EDP and doesn't
implement some of the parameters the EDP has.  Mobius presets have
names to make them easier to identify.</p>
<p>You can select presets with menus in the user interface and
also with any MIDI message.  There are however no functions
for <b>editing</b> presets using MIDI.  You can only edit presets
by interacting with the popup preset editor window.</p>
<a name='User Interface'>
<h1 class=sec1>7 User Interface</h1>
</a>
<p>Obviously the Mobius user interface is quite different than the
EDP user interface.  A few of the same visual elements are there
such as the Mobius <i>Loop Counter</i> which is similar to what the
EDP calls the <i>Loop Display</i>.  But we have no desire to make
the Mobius user interface resemble the EDP front panel.</p>
<p>All of the EDP documentation regarding "knobs" and "jacks" is
of course not applicable.  Mobius has <i>controls</i> that correspond
to all the EDP knobs and jacks.</p>
<p>Most of the things that are displayed in the EDP front panel
using LEDs are displayed in a different way in the Mobius user interface.
We won't describe all of those, but a few user interface elements
deserve special mention.</p>
<a name='Smart Buttons aka Double Clicks'>
<h2 class=sec2>7.1 Smart Buttons aka Double Clicks</h2>
</a>
<p>This is also known as "double clicking" and applies only
to the MIDI messages that trigger individual loops.  The following EDP
features are <b>not</b> supported, but you can get similar behavior
from scripts.</p>
<p><b>Double-click Loop Trigger/Copy</b>.  Triggering a loop twice
when <i>SwitchQuant</i> is on will do a <i>LoopCopy</i> from the current
loop to the triggered loop.</p>
<p><b>Double-click Loop Trigger/Record</b>.  Triggering a loop twice
when the loop is in <i>Reset</i> will start the <i>Record</i> function.</p>
<p><b>Double-click Loop Trigger/Multiply</b>.  Triggering the current
loop twice while it is playing will start the <i>Multiply</i> function.
Presumably <i>Quantize</i> must be on.</p>
<p><b>Double-Click Loop Trigger/StopRecord</b>.  If the loop is
in <i>Record</i> or <i>Multiply</i> mode, and you send the MIDI note
for the current loop, the record or multiply is ended.  Mobius kind
of supports this, the loop will be ended and the loop will be restarted.</p>
<p><b>Long-press Loop Trigger/Reset</b>.  If you long-press the
MIDI note that triggers a loop, the <i>Reset</i> function is performed.</p>
<a name='Visual Tempo Guide'>
<h2 class=sec2>7.2 Visual Tempo Guide</h2>
</a>
<p>Mobius uses the <i>Beaters</i> display component to flash a light
on each subcycle, cycle, and loop start point.  If you are using
MIDI slave sync, the beat and bar counters are displayed above
the loop counter.</p>
<p>Mobius does not currently have flashing lights to convey 
the global MIDI start point, when a sync correction happens, 
or when an AutoUndo happened.</p>
<a name='General Concepts'>
<h1 class=sec1>8 General Concepts</h1>
</a>
<a name='Event Gravity'>
<h2 class=sec2>8.1 Event Gravity</h2>
</a>
<p>Event "gravity" refers to the EDP's behavior of quantizing events
back to a previous quantization boundary rather than moving to the
next one if you are within a few milliseconds of the last boundary.
Mobius does not implement this.  When you are quantizing you need to 
be sure to press the trigger at least a little bit ahead of the
quantization point.</p>
</body>
</html>
