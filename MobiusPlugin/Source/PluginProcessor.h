/**
 * Juce AudioProcessor implementation for the Mobius plugin.
 * 
 * This file was generated by Projucer.
 * I've made minimal modifications to connect it to Supervisor.
 * It does not appear to be regenerated unless you change the project type.
 * Changes to plugin metadata in Projucer are stored here:
 *
 *    ../JuceLibraryCode/JucePluginDefines.h
 *
 * That's where the various "JucePlugin_Name" etc. symbols are defined.
 *
 * c:/dev/jucetest/UI has been added as a header file search path so we can
 * use relative includes like the main body of code.
 *
 */

#pragma once

#include <JuceHeader.h>

#include "Supervisor.h"

class MobiusPluginAudioProcessor  : public juce::AudioProcessor
{
  public:
    
    //==============================================================================
    MobiusPluginAudioProcessor();
    ~MobiusPluginAudioProcessor() override;

    void reset() override;

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

   #ifndef JucePlugin_PreferredChannelConfigurations
    bool isBusesLayoutSupported (const BusesLayout& layouts) const override;
   #endif

    void processBlock (juce::AudioBuffer<float>&, juce::MidiBuffer&) override;

    //==============================================================================
    juce::AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const juce::String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool isMidiEffect() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const juce::String getProgramName (int index) override;
    void changeProgramName (int index, const juce::String& newName) override;

    //==============================================================================
    void getStateInformation (juce::MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

  private:

    // this is where it all starts
    Supervisor supervisor {this};
    bool supervisorStarted = false;
    
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (MobiusPluginAudioProcessor)
};
